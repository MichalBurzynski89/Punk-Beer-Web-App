{"version":3,"sources":["components/Navbar.js","components/SearchForBeer.js","components/RenderBeerList.js","components/Beers.js","components/Favourites.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","NavLink","exact","to","SearchForBeer","state","content","handleSubmit","e","preventDefault","document","getElementById","focus","_this","props","searchForBeer","setState","handleChange","target","value","onSubmit","this","id","type","placeholder","onChange","Component","RenderBeerList","beers","map","beer","key","src","imageURL","alt","name","firstBrewed","tagline","desc","isFavourite","title","onClick","toggleFavourite","Beers","_ref","beerList","length","components_RenderBeerList","components_SearchForBeer","Favourites","App","items","favourites","localStorage","getItem","JSON","parse","isLoaded","error","_callee","regenerator_default","wrap","_context","prev","next","find","item","setAttribute","filter","favourite","Object","toConsumableArray","concat","setItem","stringify","stop","checkIfFavourite","fetch","then","res","ok","json","Error","status","statusText","alert","forEach","first_brewed","description","image_url","push","catch","_this2","_this3","_this$state","BrowserRouter","components_Navbar","Switch","Route","path","render","components_Beers","components_Favourites","Boolean","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25d06d44.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../css/Navbar.css';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <header className=\"App__header\">\r\n      <h1 className=\"App__title\">Who wants some beer?</h1>\r\n      <nav className=\"App__nav\">\r\n        <ul className=\"menu-list\">\r\n          <li className=\"menu-list__item\">\r\n            <NavLink className=\"menu-list__link\" exact to=\"/\">Home</NavLink>\r\n          </li>\r\n          <li className=\"menu-list__item\">\r\n            <NavLink className=\"menu-list__link\" to=\"/favourites\">Favourites</NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport '../css/SearchForBeer.css';\r\n\r\nclass SearchForBeer extends Component {\r\n  state = {\r\n    content: ''\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    document.getElementById('searchInput').focus();\r\n    if (!this.state.content) return;\r\n    this.props.searchForBeer(this.state.content);\r\n    this.setState({\r\n      content: ''\r\n    });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\r\n        <input className=\"search-form__input\" id=\"searchInput\" type=\"search\" placeholder=\"Search for beer...\" onChange={this.handleChange} value={this.state.content} />\r\n        <button className=\"search-form__button\" type=\"submit\">Search</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForBeer;","import React from 'react';\r\n\r\nconst RenderBeerList = props => (\r\n  props.beers.map(beer => (\r\n    <div className=\"card\" key={beer.id}>\r\n      <div className=\"card__col\">\r\n        <img className=\"card__img\" src={beer.imageURL} alt={beer.name} />\r\n        <p className=\"card__text card__text--sm\">First brewed: {beer.firstBrewed}</p>\r\n      </div>\r\n      <div className=\"card__content\">\r\n        <h2 className=\"card__title\">{beer.name}</h2>\r\n        <p className=\"card__text card__text--gray\">{beer.tagline}</p>\r\n        <p className=\"card__text\">{beer.desc}</p>\r\n      </div>\r\n      <i className={beer.isFavourite ? 'fas fa-star' : 'far fa-star'} title={beer.isFavourite ? 'Remove from Favourites' : 'Add to Favourites'} onClick={(e) => props.toggleFavourite(e, beer.id)} ></i>\r\n    </div>\r\n  ))\r\n)\r\n\r\nexport default RenderBeerList;","import React from 'react';\r\nimport SearchForBeer from './SearchForBeer';\r\nimport RenderBeerList from './RenderBeerList';\r\nimport '../css/Beers.css';\r\n\r\nconst Beers = ({ beers, toggleFavourite, searchForBeer }) => {\r\n  const beerList = beers.length ? (\r\n    <RenderBeerList beers={beers} toggleFavourite={toggleFavourite} />\r\n  ) : (\r\n      <p className=\"info\">...Loading Beer!</p>\r\n    );\r\n\r\n  return (\r\n    <main className=\"App__main\">\r\n      <SearchForBeer searchForBeer={searchForBeer} />\r\n      <div className=\"container\">\r\n        {beerList}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Beers;","import React from 'react';\r\nimport RenderBeerList from './RenderBeerList';\r\nimport '../css/Beers.css';\r\n\r\nconst Favourites = ({ beers, toggleFavourite }) => {\r\n  const beerList = beers.length ? (\r\n    <RenderBeerList beers={beers} toggleFavourite={toggleFavourite} />\r\n  ) : (\r\n      <p className=\"info\">You have not added any beers to your Favourites yet!</p>\r\n    );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {beerList}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favourites;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Beers from './components/Beers';\nimport Favourites from './components/Favourites';\n\nclass App extends Component {\n  state = {\n    items: [],\n    favourites: localStorage.getItem('Favourites') ? JSON.parse(localStorage.getItem('Favourites')) : [],\n    isLoaded: false,\n    error: null\n  }\n\n  toggleFavourite = async (e, id) => {\n    const beer = this.state.items.find(item => item.id === id);\n    let favourites;\n    if (!beer.isFavourite) {\n      e.target.className = 'fas fa-star';\n      e.target.setAttribute('title', 'Remove from Favourites');\n      favourites = [...this.state.favourites, beer];\n    } else {\n      e.target.className = 'far fa-star';\n      e.target.setAttribute('title', 'Add to Favourites');\n      favourites = this.state.favourites.filter(favourite => favourite.id !== id);\n    }\n    beer.isFavourite = !beer.isFavourite;\n    await this.setState({ favourites });\n    localStorage.setItem('Favourites', JSON.stringify(this.state.favourites));\n  }\n\n  checkIfFavourite = (id) => {\n    const isFavourite = this.state.favourites.find(favourite => favourite.id === id);\n    if (isFavourite) return true;\n    return false;\n  }\n\n  searchForBeer = (beer) => {\n    const items = [];\n    fetch(`https://api.punkapi.com/v2/beers?beer_name=${beer}&page=1&per_page=80`)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw new Error(`The connection ended with status ${res.status}${res.statusText ? ': ' + res.statusText : ''}`);\n        }\n      })\n      .then(json => {\n        if (!json.length) return alert('We\\'re sorry, we could not find such a beer :(');\n        json.forEach(item => {\n          const beer = {\n            id: item.id,\n            name: item.name,\n            tagline: item.tagline,\n            firstBrewed: item.first_brewed,\n            desc: item.description,\n            imageURL: item.image_url,\n            isFavourite: this.checkIfFavourite(item.id)\n          };\n          items.push(beer);\n        });\n        this.setState({ items });\n      })\n      .catch(error => {\n        this.setState({ error });\n        alert(error);\n      });\n  }\n\n  componentDidMount() {\n    const items = [];\n    fetch('https://api.punkapi.com/v2/beers?page=1&per_page=80')\n      .then(res => {\n        if (res.ok) {\n          this.setState({ isLoaded: true });\n          return res.json();\n        } else {\n          throw new Error(`The connection ended with status ${res.status}${res.statusText ? ': ' + res.statusText : ''}`);\n        }\n      })\n      .then(json => {\n        json.forEach(item => {\n          const beer = {\n            id: item.id,\n            name: item.name,\n            tagline: item.tagline,\n            firstBrewed: item.first_brewed,\n            desc: item.description,\n            imageURL: item.image_url,\n            isFavourite: this.checkIfFavourite(item.id)\n          };\n          items.push(beer);\n        });\n        this.setState({ items });\n      })\n      .catch(error => {\n        this.setState({ isLoaded: true, error });\n        alert(error);\n      });\n  }\n\n  render() {\n    const { items, favourites } = this.state;\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" render={() => <Beers beers={items} toggleFavourite={this.toggleFavourite} searchForBeer={this.searchForBeer} />} />\n            <Route path=\"/favourites\" render={() => <Favourites beers={favourites} toggleFavourite={this.toggleFavourite} />} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}